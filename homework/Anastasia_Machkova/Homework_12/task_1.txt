1. Тестирование ПО - это проверка соответствия между реальным и ожидаемым поведением программы, с комощью конечного набора тестов.

2. SDLC - Software/System Development Life Cycle (Жизненный цикл ПО - этапы создания программы. 
	1. Requirement Analysis - собираются требования, анализируются
	2. Design - 1. То, как выглядит программа (какие цвета, дизайн). 2. Архитектурный дизайн - как программа настроена, какие модули, языки, типы и так далее.
	3. Implementation - Разработка, программирование
	4. Testing - непосредственно тестирование
	5. Evaluation - оценка, доставка продукта до конечного пользователя, установить ее и так далее, сопровождение.

3. Этапы тестирования:
	1. Анализ требований
	2. Планирование тестирования
	3. Тест-дизайн
	4. Запуск тестов
	5. Редактирование тестов
	6. Регрессионное тестирование
	7. Приемочные испытания
	8. Эксплуатация и сопровождение
	9. Анализ результатов

4. Регрессионное тестирование - тестирование, с помощью которого вы проверяете что то, что работало ранее, все еще работает как раньше. Применяется после любого изменения в программе. Могут быть как функциональные тесты, так и нефункциональные. 

5. Смоук-тест - (вид тестирования) короткий цикл тестов, чтобы убедиться, что после сборки кода (нового или исправленного) приложение стартует и выполняет основые функции. 

6. Уровни тестирования:
	1. По запуску кода на исполнение: статическое, динамическое
	2. По доступу к коду и архитектуре приложения:
		а. Метод белого ящика (мы работаем с кодом системы)
		б. Метод черного ящика (мы не работаем с кодом системы)
		в. Метод серого ящика (частично работаем с кодом системы)
	3. По (убыванию) степени важности тестируемых функций:
		а. Смоук тест
		б. Критичного пути
		в. Расширенное
	4. По уровню детализации приложения:
		а. Модульное (тестируем функции, приложения отдельного от других)
		б. Интеграционное (взаимосвязь между элементами и приложениями)
		в. Системное (тестируем все целиком)
	5. По степени автоматизации:
		а. Ручное
		б. Автоматизированное

7. Кратко, Agile - это гибкая методология разработки, ориентированная на использование итеративной инкрементальной разработки, динамичное формирование требований и из реализация в результате постоянного взаимодейтсвия внутри команды.
	Идеи Agile:
		а. Люди и их взаимодействие важнее, чем процессы и инструменты
		б. Рабочее ПО важнее, чем документация
		в. Клиенты и сотрудничество с ними важнее, чем контракт и обсуждений условий
		г. Готовность к внесению измененений важнее, чем первоначальный план.

8. Требования: полнота, однозначность, корректность,непротиворечивость, необходимость, осуществимость, проверяемость.